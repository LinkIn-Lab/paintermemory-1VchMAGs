{
  "SchemaVersion": 2,
  "CreatedAt": "2024-12-20T11:36:24.83495942Z",
  "ArtifactName": "main.tf",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": ".",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 55,
        "Failures": 0
      }
    },
    {
      "Target": "terraform-aws-modules/eks/aws/main.tf",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 0,
        "Failures": 4
      },
      "Misconfigurations": [
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0038",
          "AVDID": "AVD-AWS-0038",
          "Title": "EKS Clusters should have cluster control plane logging turned on",
          "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.\n",
          "Message": "Control plane controller manager logging is not enabled.",
          "Namespace": "builtin.aws.eks.aws0038",
          "Query": "data.builtin.aws.eks.aws0038.deny",
          "Resolution": "Enable logging for the EKS control plane",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
          "References": [
            "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0038"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.eks",
            "Provider": "AWS",
            "Service": "eks",
            "StartLine": 25,
            "EndLine": 90,
            "Code": {
              "Lines": [
                {
                  "Number": 25,
                  "Content": "resource \"aws_eks_cluster\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_eks_cluster\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "  count = local.create ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 27,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 28,
                  "Content": "  name                      = var.cluster_name",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mname\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.cluster_name",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  role_arn                  = local.cluster_role",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mrole_arn\u001b[0m                  = local.cluster_role",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "  version                   = var.cluster_version",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mversion\u001b[0m                   = \u001b[38;5;33mvar\u001b[0m.cluster_version",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  enabled_cluster_log_types = var.cluster_enabled_log_types",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245menabled_cluster_log_types\u001b[0m = \u001b[38;5;33mvar\u001b[0m.cluster_enabled_log_types",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  vpc_config {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  vpc_config {",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.eks",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 73,
                  "EndLine": 111
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0038",
          "AVDID": "AVD-AWS-0038",
          "Title": "EKS Clusters should have cluster control plane logging turned on",
          "Description": "By default cluster control plane logging is not turned on. Logging is available for audit, api, authenticator, controllerManager and scheduler. All logging should be turned on for cluster control plane.\n",
          "Message": "Control plane scheduler logging is not enabled.",
          "Namespace": "builtin.aws.eks.aws0038",
          "Query": "data.builtin.aws.eks.aws0038.deny",
          "Resolution": "Enable logging for the EKS control plane",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0038",
          "References": [
            "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0038"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.eks",
            "Provider": "AWS",
            "Service": "eks",
            "StartLine": 25,
            "EndLine": 90,
            "Code": {
              "Lines": [
                {
                  "Number": 25,
                  "Content": "resource \"aws_eks_cluster\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_eks_cluster\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "  count = local.create ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 27,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 28,
                  "Content": "  name                      = var.cluster_name",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mname\u001b[0m                      = \u001b[38;5;33mvar\u001b[0m.cluster_name",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 29,
                  "Content": "  role_arn                  = local.cluster_role",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mrole_arn\u001b[0m                  = local.cluster_role",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 30,
                  "Content": "  version                   = var.cluster_version",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mversion\u001b[0m                   = \u001b[38;5;33mvar\u001b[0m.cluster_version",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 31,
                  "Content": "  enabled_cluster_log_types = var.cluster_enabled_log_types",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245menabled_cluster_log_types\u001b[0m = \u001b[38;5;33mvar\u001b[0m.cluster_enabled_log_types",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 32,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 33,
                  "Content": "  vpc_config {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  vpc_config {",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 34,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.eks",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 73,
                  "EndLine": 111
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0040",
          "AVDID": "AVD-AWS-0040",
          "Title": "EKS Clusters should have the public access disabled",
          "Description": "EKS clusters are available publicly by default, this should be explicitly disabled in the vpc_config of the EKS cluster resource.\n",
          "Message": "Public cluster access is enabled.",
          "Namespace": "builtin.aws.eks.aws0040",
          "Query": "data.builtin.aws.eks.aws0040.deny",
          "Resolution": "Don't enable public access to EKS Clusters",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0040",
          "References": [
            "https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0040"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.eks",
            "Provider": "AWS",
            "Service": "eks",
            "StartLine": 37,
            "EndLine": 37,
            "Code": {
              "Lines": [
                {
                  "Number": 25,
                  "Content": "resource \"aws_eks_cluster\" \"this\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_eks_cluster\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 37,
                  "Content": "    endpoint_public_access  = var.cluster_endpoint_public_access",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;245mendpoint_public_access\u001b[0m  = \u001b[38;5;33mvar\u001b[0m.cluster_endpoint_public_access",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 89,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 90,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "vpc_config",
                "Filename": "terraform-aws-modules/eks/aws/main.tf",
                "Location": {
                  "StartLine": 33,
                  "EndLine": 39
                }
              },
              {
                "Resource": "aws_eks_cluster.this[0]",
                "Filename": "terraform-aws-modules/eks/aws/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 90
                }
              },
              {
                "Resource": "module.eks",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 73,
                  "EndLine": 111
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "AVD-AWS-0041",
          "AVDID": "AVD-AWS-0041",
          "Title": "EKS cluster should not have open CIDR range for public access",
          "Description": "EKS Clusters have public access cidrs set to 0.0.0.0/0 by default which is wide open to the internet. This should be explicitly set to a more specific private CIDR range\n",
          "Message": "Cluster allows access from a public CIDR: 0.0.0.0/0",
          "Namespace": "builtin.aws.eks.aws0041",
          "Query": "data.builtin.aws.eks.aws0041.deny",
          "Resolution": "Don't enable public access to EKS Clusters",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/avd-aws-0041",
          "References": [
            "https://docs.aws.amazon.com/eks/latest/userguide/create-public-private-vpc.html",
            "https://avd.aquasec.com/misconfig/avd-aws-0041"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.eks",
            "Provider": "AWS",
            "Service": "eks",
            "StartLine": 38,
            "EndLine": 38,
            "Code": {
              "Lines": [
                {
                  "Number": 25,
                  "Content": "resource \"aws_eks_cluster\" \"this\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_eks_cluster\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 38,
                  "Content": "    public_access_cidrs     = var.cluster_endpoint_public_access_cidrs",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "    \u001b[38;5;245mpublic_access_cidrs\u001b[0m     = \u001b[38;5;33mvar\u001b[0m.cluster_endpoint_public_access_cidrs",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 89,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 90,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "vpc_config",
                "Filename": "terraform-aws-modules/eks/aws/main.tf",
                "Location": {
                  "StartLine": 33,
                  "EndLine": 39
                }
              },
              {
                "Resource": "aws_eks_cluster.this[0]",
                "Filename": "terraform-aws-modules/eks/aws/main.tf",
                "Location": {
                  "StartLine": 25,
                  "EndLine": 90
                }
              },
              {
                "Resource": "module.eks",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 73,
                  "EndLine": 111
                }
              }
            ]
          }
        }
      ]
    },
    {
      "Target": "terraform-aws-modules/eks/aws/node_groups.tf",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 0,
        "Failures": 1
      },
      "Misconfigurations": [
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-egress-sgr",
          "AVDID": "AVD-AWS-0104",
          "Title": "An egress security group rule allows traffic to /0.",
          "Description": "Opening up ports to connect out to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that are explicitly required where possible.\n",
          "Message": "Security group rule allows egress to multiple public internet addresses.",
          "Namespace": "builtin.aws.ec2.aws0104",
          "Query": "data.builtin.aws.ec2.aws0104.deny",
          "Resolution": "Set a more restrictive cidr range",
          "Severity": "CRITICAL",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-egress-sgr",
          "References": [
            "https://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/centralized-egress-to-internet.html",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-egress-sgr"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.eks",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 195,
            "EndLine": 195,
            "Code": {
              "Lines": [
                {
                  "Number": 179,
                  "Content": "resource \"aws_security_group_rule\" \"node\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_security_group_rule\"\u001b[0m \u001b[38;5;37m\"node\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 180,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 195,
                  "Content": "  cidr_blocks              = lookup(each.value, \"cidr_blocks\", null)",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_blocks\u001b[0m              =\u001b[38;5;33m lookup\u001b[0m(\u001b[38;5;33meach\u001b[0m.value, \u001b[38;5;37m\"cidr_blocks\"\u001b[0m, null)",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 199,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 200,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_security_group_rule.node[\"egress_all\"]",
                "Filename": "terraform-aws-modules/eks/aws/node_groups.tf",
                "Location": {
                  "StartLine": 179,
                  "EndLine": 200
                }
              },
              {
                "Resource": "module.eks",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 73,
                  "EndLine": 111
                }
              }
            ]
          }
        }
      ]
    },
    {
      "Target": "terraform-aws-modules/vpc/aws/main.tf",
      "Class": "config",
      "Type": "terraform",
      "MisconfSummary": {
        "Successes": 0,
        "Failures": 4
      },
      "Misconfigurations": [
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-sgr",
          "AVDID": "AVD-AWS-0164",
          "Title": "Instances in a subnet should not receive a public IP address by default.",
          "Description": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.\n",
          "Message": "Subnet associates public IP address.",
          "Namespace": "builtin.aws.ec2.aws0164",
          "Query": "data.builtin.aws.ec2.aws0164.deny",
          "Resolution": "Set the instance to not be publicly accessible",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-sgr",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-sgr"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 366,
            "EndLine": 366,
            "Code": {
              "Lines": [
                {
                  "Number": 359,
                  "Content": "resource \"aws_subnet\" \"public\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_subnet\"\u001b[0m \u001b[38;5;37m\"public\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 360,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 366,
                  "Content": "  map_public_ip_on_launch         = var.map_public_ip_on_launch",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mmap_public_ip_on_launch\u001b[0m         = \u001b[38;5;33mvar\u001b[0m.map_public_ip_on_launch",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 381,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 382,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_subnet.public[1]",
                "Filename": "terraform-aws-modules/vpc/aws/main.tf",
                "Location": {
                  "StartLine": 359,
                  "EndLine": 382
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 44,
                  "EndLine": 71
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-sgr",
          "AVDID": "AVD-AWS-0164",
          "Title": "Instances in a subnet should not receive a public IP address by default.",
          "Description": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.\n",
          "Message": "Subnet associates public IP address.",
          "Namespace": "builtin.aws.ec2.aws0164",
          "Query": "data.builtin.aws.ec2.aws0164.deny",
          "Resolution": "Set the instance to not be publicly accessible",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-sgr",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-sgr"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 366,
            "EndLine": 366,
            "Code": {
              "Lines": [
                {
                  "Number": 359,
                  "Content": "resource \"aws_subnet\" \"public\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_subnet\"\u001b[0m \u001b[38;5;37m\"public\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 360,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 366,
                  "Content": "  map_public_ip_on_launch         = var.map_public_ip_on_launch",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mmap_public_ip_on_launch\u001b[0m         = \u001b[38;5;33mvar\u001b[0m.map_public_ip_on_launch",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 381,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 382,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_subnet.public[0]",
                "Filename": "terraform-aws-modules/vpc/aws/main.tf",
                "Location": {
                  "StartLine": 359,
                  "EndLine": 382
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 44,
                  "EndLine": 71
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-vpc-no-public-ingress-sgr",
          "AVDID": "AVD-AWS-0164",
          "Title": "Instances in a subnet should not receive a public IP address by default.",
          "Description": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.\n",
          "Message": "Subnet associates public IP address.",
          "Namespace": "builtin.aws.ec2.aws0164",
          "Query": "data.builtin.aws.ec2.aws0164.deny",
          "Resolution": "Set the instance to not be publicly accessible",
          "Severity": "HIGH",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-sgr",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses",
            "https://avd.aquasec.com/misconfig/aws-vpc-no-public-ingress-sgr"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 366,
            "EndLine": 366,
            "Code": {
              "Lines": [
                {
                  "Number": 359,
                  "Content": "resource \"aws_subnet\" \"public\" {",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_subnet\"\u001b[0m \u001b[38;5;37m\"public\"\u001b[0m {",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 360,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 366,
                  "Content": "  map_public_ip_on_launch         = var.map_public_ip_on_launch",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mmap_public_ip_on_launch\u001b[0m         = \u001b[38;5;33mvar\u001b[0m.map_public_ip_on_launch",
                  "FirstCause": true,
                  "LastCause": true
                },
                {
                  "Number": 381,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 382,
                  "Content": "}",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "}",
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "aws_subnet.public[2]",
                "Filename": "terraform-aws-modules/vpc/aws/main.tf",
                "Location": {
                  "StartLine": 359,
                  "EndLine": 382
                }
              },
              {
                "Resource": "module.vpc",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 44,
                  "EndLine": 71
                }
              }
            ]
          }
        },
        {
          "Type": "Terraform Security Check",
          "ID": "aws-autoscaling-enable-at-rest-encryption",
          "AVDID": "AVD-AWS-0178",
          "Title": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
          "Description": "VPC Flow Logs provide visibility into network traffic that traverses the VPC and can be used to detect anomalous traffic or insight during security workflows.\n",
          "Message": "VPC does not have VPC Flow Logs enabled.",
          "Namespace": "builtin.aws.ec2.aws0178",
          "Query": "data.builtin.aws.ec2.aws0178.deny",
          "Resolution": "Enable flow logs for VPC",
          "Severity": "MEDIUM",
          "PrimaryURL": "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption",
          "References": [
            "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
            "https://avd.aquasec.com/misconfig/aws-autoscaling-enable-at-rest-encryption"
          ],
          "Status": "FAIL",
          "Layer": {},
          "CauseMetadata": {
            "Resource": "module.vpc",
            "Provider": "AWS",
            "Service": "ec2",
            "StartLine": 20,
            "EndLine": 43,
            "Code": {
              "Lines": [
                {
                  "Number": 20,
                  "Content": "resource \"aws_vpc\" \"this\" {",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[38;5;33mresource\u001b[0m \u001b[38;5;37m\"aws_vpc\"\u001b[0m \u001b[38;5;37m\"this\"\u001b[0m {",
                  "FirstCause": true,
                  "LastCause": false
                },
                {
                  "Number": 21,
                  "Content": "  count = local.create_vpc ? 1 : 0",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcount\u001b[0m = local.create_vpc \u001b[38;5;245m?\u001b[0m \u001b[38;5;37m1\u001b[0m \u001b[38;5;245m:\u001b[0m \u001b[38;5;37m0",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 22,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "\u001b[0m",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 23,
                  "Content": "  cidr_block          = var.use_ipam_pool ? null : var.cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mcidr_block\u001b[0m          = \u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m null \u001b[38;5;245m:\u001b[0m \u001b[38;5;33mvar\u001b[0m.cidr",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 24,
                  "Content": "  ipv4_ipam_pool_id   = var.ipv4_ipam_pool_id",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_ipam_pool_id\u001b[0m   = \u001b[38;5;33mvar\u001b[0m.ipv4_ipam_pool_id",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 25,
                  "Content": "  ipv4_netmask_length = var.ipv4_netmask_length",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv4_netmask_length\u001b[0m = \u001b[38;5;33mvar\u001b[0m.ipv4_netmask_length",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 26,
                  "Content": "",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 27,
                  "Content": "  assign_generated_ipv6_cidr_block = var.enable_ipv6 \u0026\u0026 !var.use_ipam_pool ? true : null",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245massign_generated_ipv6_cidr_block\u001b[0m = \u001b[38;5;33mvar\u001b[0m.enable_ipv6 \u001b[38;5;245m\u0026\u0026\u001b[0m \u001b[38;5;245m!\u001b[0m\u001b[38;5;33mvar\u001b[0m.use_ipam_pool \u001b[38;5;245m?\u001b[0m \u001b[38;5;166mtrue\u001b[0m \u001b[38;5;245m:\u001b[0m null",
                  "FirstCause": false,
                  "LastCause": false
                },
                {
                  "Number": 28,
                  "Content": "  ipv6_cidr_block                  = var.ipv6_cidr",
                  "IsCause": true,
                  "Annotation": "",
                  "Truncated": false,
                  "Highlighted": "  \u001b[38;5;245mipv6_cidr_block\u001b[0m                  = \u001b[38;5;33mvar\u001b[0m.ipv6_cidr",
                  "FirstCause": false,
                  "LastCause": true
                },
                {
                  "Number": 29,
                  "Content": "",
                  "IsCause": false,
                  "Annotation": "",
                  "Truncated": true,
                  "FirstCause": false,
                  "LastCause": false
                }
              ]
            },
            "Occurrences": [
              {
                "Resource": "module.vpc",
                "Filename": "main.tf",
                "Location": {
                  "StartLine": 44,
                  "EndLine": 71
                }
              }
            ]
          }
        }
      ]
    }
  ]
}
